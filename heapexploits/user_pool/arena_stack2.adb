with Ada.Text_IO;
use Ada.Text_IO;
with Arena_Pools;
use  Arena_Pools;
with Ada.Unchecked_Conversion;


procedure Stack2 is
   pragma Suppress(All_Checks); 
                                
   Array_Length : constant := 100;
   Array_Length2 : constant := 200;
   
   
   Pool : aliased Arena_Pools.Arena (200);
   type Integer_ptr is access all Integer;
   for Integer_ptr'Storage_Pool use Pool;
   type Character_ptr is access all Character;
   for Character_ptr'Storage_Pool use Pool;
   
   Char_Array : array (1..Array_Length) of Character_ptr;
   J : Integer_ptr;
   C : Character;
   CP : Character_ptr;   

   function bypass is
      new Ada.Unchecked_Conversion (Source => Integer,
                                    Target => Integer);
begin
   Ada.Text_IO.Put_Line("Hello World");
   J := new Integer'(1);
   
   loop 
      Get(C);
      CP := new Character'(C);
      exit when CP.all = 'Z';
      Char_Array(bypass(167)) := CP;--write into stack
      J.all := J.all + 1;
   end loop;
end Stack2;
