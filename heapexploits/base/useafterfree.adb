--use after free:
--#include <stdio.h>
--#include <unistd.h>
--#define BUFSIZER1 512
--#define BUFSIZER2 ((BUFSIZER1/2) - 8)
--int main(int argc, char **argv) {
--char *buf1R1;
--char *buf2R1;
--char *buf2R2;
--char *buf3R2;
--buf1R1 = (char *) malloc(BUFSIZER1);
--buf2R1 = (char *) malloc(BUFSIZER1);
--free(buf2R1);
--buf2R2 = (char *) malloc(BUFSIZER2);
--buf3R2 = (char *) malloc(BUFSIZER2);
--strncpy(buf2R1, argv[1], BUFSIZER1-1);
--free(buf1R1);
--free(buf2R2);
--free(buf3R2);



--with Ada.Text_IO; use Ada.Text_IO;
with Ada.Unchecked_Deallocation;
with Ada.Unchecked_Conversion;

procedure Hello is
    pragma Suppress(All_Checks);
    type Integer_Ptr is access all Integer;
    num1: aliased Integer_Ptr;
    num2: aliased Integer_Ptr;
    num3: aliased Integer_Ptr;
    num4: aliased Integer_Ptr;
    num5: aliased Integer_Ptr;
    
    procedure free is new Ada.Unchecked_Deallocation (Integer, Integer_Ptr);
    
    function convert is
      new Ada.Unchecked_Conversion (Source => Integer,
                                    Target => Integer);
    
begin
    num1 := new Integer'(1);
    num2 := new Integer'(2);
    
    free(num2);
    
    num3 := new Integer'(3);
    num4 := new Integer'(4);
    
    num5 := new Integer;
    num5.all := convert(num2.all);
    
    free(num1);
    free(num3);
    free(num4);
  
end Hello;
