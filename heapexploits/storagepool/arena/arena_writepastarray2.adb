with Ada.Integer_Text_IO;
with Ada.Unchecked_Conversion;
with Arena_Pools;
use  Arena_Pools;
with Ada.Text_IO; Use Ada.Text_IO;
with System.Address_Image;

procedure arena_writepastarray2 is
   pragma Suppress(All_Checks);
   
   
   Pool : aliased Arena_Pools.Arena (90);
   type Integer_Ptr is access Integer;
   for Integer_Ptr'Storage_Pool use Pool;
   
   Pool2 : aliased Arena_Pools.Arena (90);
   type Integer_Ptr2 is access Integer;
   for Integer_Ptr2'Storage_Pool use Pool2;   

   type Index is new Integer range 1 .. 2;
   type Values is array (Index) of Integer_Ptr;
   type Values2 is array (Index) of Integer_Ptr2;
    
   type ExploitIndex is new Integer range -100 .. 100;
   
   
   function convert is
      new Ada.Unchecked_Conversion (Source => ExploitIndex,
                                    Target => Index);
   
   
   arr1 : Values;
   arr2 : Values2;
   
   
begin
   arr1 := (new Integer'(1), new Integer'(1));
   arr2 := (new Integer'(5), new Integer'(5));
   
   arr1(convert(4)) := new Integer'(444);
   
   Ada.Integer_Text_IO.Put(arr1(1).all);
   Ada.Integer_Text_IO.Put(arr1(2).all);
   Ada.Integer_Text_IO.Put(arr2(1).all);
   Ada.Integer_Text_IO.Put(arr2(2).all);
   
end arena_writepastarray2;