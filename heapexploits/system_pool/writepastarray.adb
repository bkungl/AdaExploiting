--write past array
with Ada.Unchecked_Deallocation;
with Ada.Unchecked_Conversion;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;

procedure WritePastArray is
    pragma Suppress(All_Checks);
    type Integer_Ptr is access all Integer;
    
    type Index is new Integer range 1 .. 2;
    type Values is array (Index) of Integer_Ptr;
    
    type ExploitIndex is new Integer range -100 .. 100;
    
    procedure free is new Ada.Unchecked_Deallocation (Integer, Integer_Ptr);
    
    function convert is
      new Ada.Unchecked_Conversion (Source => ExploitIndex,
                                    Target => Index);
    
    
    arr1 : Values;
    arr2 : Values;
begin
    arr1 := (new Integer'(1), new Integer'(1));
    arr2 := (new Integer'(5), new Integer'(5));
    arr1(convert(4)) := new Integer'(2);
    Ada.Integer_Text_IO.Put(arr1(1).all);
    Ada.Integer_Text_IO.Put(arr1(2).all);
    Ada.Integer_Text_IO.Put(arr2(1).all);
    Ada.Integer_Text_IO.Put(arr2(2).all);
    
end WritePastArray;
