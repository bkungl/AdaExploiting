--https://cwe.mitre.org/data/definitions/415.html
--double free:
--char *buf1R1;
--char *buf2R1;
--char *buf1R2;
--buf1R1 = (char *) malloc(BUFSIZE2);
--buf2R1 = (char *) malloc(BUFSIZE2);
--free(buf1R1);
--free(buf2R1);
--buf1R2 = (char *) malloc(BUFSIZE1);
--strncpy(buf1R2, argv[1], BUFSIZE1-1);
--free(buf2R1);
--free(buf1R2);


--with Ada.Text_IO; use Ada.Text_IO;
with Ada.Unchecked_Deallocation;
with Ada.Unchecked_Conversion;
procedure doublefree is
    pragma Suppress(All_Checks);
    type Integer_Ptr is access all Integer;
    num1: aliased Integer_Ptr;
    num2: aliased Integer_Ptr;
    num3: aliased Integer_Ptr;
    procedure free is new Ada.Unchecked_Deallocation (Integer, Integer_Ptr);
    function convert is
      new Ada.Unchecked_Conversion (Source => Integer,
                                    Target => Integer);
begin
    num1 := new Integer'(1);
    num2 := new Integer'(2);
    free(num1);
    free(num2);
    num3 := new Integer;
    num3.all := convert(num2.all);
    free(num2);
    free(num3);
end doublefree;
